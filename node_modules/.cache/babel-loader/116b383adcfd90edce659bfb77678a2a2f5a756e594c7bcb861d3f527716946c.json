{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\n/*\nCopyright 2022 Adobe\nAll Rights Reserved.\n\nNOTICE: Adobe permits you to use, modify, and distribute this file in\naccordance with the terms of the Adobe license agreement accompanying\nit.\n*/\n\nimport aemHeadlessClient from \"./aemHeadlessClient\";\nimport { useEffect, useState } from \"react\";\n\n/**\n * This file contains the React useEffect custom hooks that:\n * 1. Are called by the React components\n * 2. To get data from AEM GraphQL persisted queries\n *\n * Each custom hook maps to a persisted query and is responsible for:\n * 1. Calling the AEM persisted query\n * 2. Collecting and transforming the returned data into the format expected by the React view components\n * 3. Setting and returning any error state\n */\n\n/**\n *  \n */\n\n/**\n * Private, shared function that invokes the AEM Headless client.\n * \n * @param {String} persistedQueryName the fully qualified name of the persisted query\n * @param {*} queryParameters an optional JavaScript object containing query parameters\n * @returns the GraphQL data or an error message \n */\nasync function fetchPersistedQuery(persistedQueryName, queryParameters) {\n  //*********************************\n  // TODO :: Implement this by following the steps from AEM Headless Tutorial ==> Implement to run AEM GraphQL persisted queries\n  // https://experienceleague.adobe.com/docs/experience-manager-learn/getting-started-with-aem-headless/graphql/multi-step/graphql-and-react-app.html#implement-to-run-aem-graphql-persisted-queries\n  //*********************************\n  let data;\n  let err;\n  try {\n    // AEM GraphQL queries are asynchronous, either await their return or use Promise-based syntax\n    const response = await aemHeadlessClient.runPersistedQuery(persistedQueryName, queryParameters);\n    // The GraphQL data is stored on the response's data field\n    data = response === null || response === void 0 ? void 0 : response.data;\n  } catch (e) {\n    var _e$toJSON, _e$toJSON$map;\n    // An error occurred, return the error messages\n    err = (_e$toJSON = e.toJSON()) === null || _e$toJSON === void 0 ? void 0 : (_e$toJSON$map = _e$toJSON.map(error => error.message)) === null || _e$toJSON$map === void 0 ? void 0 : _e$toJSON$map.join(\", \");\n    console.error(e.toJSON());\n  }\n\n  // Return the GraphQL and any errors\n  return {\n    data,\n    err\n  };\n}\n\n/**\n * Custom hook that calls the 'my-project/all-teams' persisted query.\n *\n * @returns an array of Team JSON objects, and array of errors\n */\nexport function useAllTeams() {\n  _s();\n  //*********************************\n  // TODO :: Implement this by following the steps from AEM Headless Tutorial ==> Implement Teams functionality\n  // https://experienceleague.adobe.com/docs/experience-manager-learn/getting-started-with-aem-headless/graphql/multi-step/graphql-and-react-app.html#implement-teams-functionality\n  //*********************************\n  const [teams, setTeams] = useState(null);\n  const [error, setError] = useState(null);\n\n  // Use React useEffect to manage state changes\n  useEffect(() => {\n    async function fetchData() {\n      var _data$teamList;\n      // Call the AEM GraphQL persisted query named \"my-project/all-teams\"\n      const {\n        data,\n        err\n      } = await fetchPersistedQuery(\"my-project/all-teams\");\n      // Sets the teams variable to the list of team JSON objects\n      setTeams(data === null || data === void 0 ? void 0 : (_data$teamList = data.teamList) === null || _data$teamList === void 0 ? void 0 : _data$teamList.items);\n      // Set any errors\n      setError(err);\n    }\n    // Call the internal fetchData() as per React best practices\n    fetchData();\n  }, []);\n\n  // Returns the teams and errors\n  return {\n    teams,\n    error\n  };\n}\n\n/**\n * Calls the 'my-project/person-by-name' and provided the {fullName} as the persisted query's `name` parameter.\n *\n * @param {String!} fullName the full\n * @returns a JSON object representing the person\n */\n/**\n * Calls the 'my-project/person-by-name' and provided the {fullName} as the persisted query's `name` parameter.\n *\n * @param {String!} fullName the full\n * @returns a JSON object representing the person\n */\n_s(useAllTeams, \"uR0xFJJwZS4iBPK1NDVi4bFs7fQ=\");\nexport function usePersonByName(fullName) {\n  _s2();\n  const [person, setPerson] = useState(null);\n  const [errors, setErrors] = useState(null);\n  useEffect(() => {\n    async function fetchData() {\n      var _data$personList, _data$personList$item;\n      // The key is the variable name as defined in the persisted query, and may not match the model's field name\n      const queryParameters = {\n        name: fullName\n      };\n\n      // Invoke the persisted query, and pass in the queryParameters object as the 2nd parameter\n      const {\n        data,\n        err\n      } = await fetchPersistedQuery(\"my-project/person-by-name\", queryParameters);\n      if (err) {\n        // Capture errors from the HTTP request\n        setErrors(err);\n      } else if ((data === null || data === void 0 ? void 0 : (_data$personList = data.personList) === null || _data$personList === void 0 ? void 0 : (_data$personList$item = _data$personList.items) === null || _data$personList$item === void 0 ? void 0 : _data$personList$item.length) === 1) {\n        // Set the person data after data validation\n        setPerson(data.personList.items[0]);\n      } else {\n        // Set an error if no person could be found\n        setErrors(`Cannot find person with name: ${fullName}`);\n      }\n    }\n    fetchData();\n  }, [fullName]);\n  return {\n    person,\n    errors\n  };\n}\n_s2(usePersonByName, \"znX3oiST5u0Dn/l29xkKO2ogrqk=\");\nexport function useAllTeamMatches() {\n  _s3();\n  //*********************************\n  // TODO :: Implement this by following the steps from AEM Headless Tutorial ==> Implement Teams functionality\n  // https://experienceleague.adobe.com/docs/experience-manager-learn/getting-started-with-aem-headless/graphql/multi-step/graphql-and-react-app.html#implement-teams-functionality\n  //*********************************\n  const [matches, setMatches] = useState(null);\n  const [error, setError] = useState(null);\n\n  // Use React useEffect to manage state changes\n  useEffect(() => {\n    async function fetchData() {\n      var _data$teamList2;\n      // Call the AEM GraphQL persisted query named \"my-project/all-teams\"\n      const {\n        data,\n        err\n      } = await fetchPersistedQuery(\"my-project/all-venue\");\n      // Sets the teams variable to the list of team JSON objects\n      setTeams(data === null || data === void 0 ? void 0 : (_data$teamList2 = data.teamList) === null || _data$teamList2 === void 0 ? void 0 : _data$teamList2.items);\n      // Set any errors\n      setError(err);\n    }\n    // Call the internal fetchData() as per React best practices\n    fetchData();\n  }, []);\n\n  // Returns the teams and errors\n  return {\n    teams,\n    error\n  };\n}\n_s3(useAllTeamMatches, \"05d9T9CuKT6aEY2hyNjsxrSE4kM=\");","map":{"version":3,"names":["aemHeadlessClient","useEffect","useState","fetchPersistedQuery","persistedQueryName","queryParameters","data","err","response","runPersistedQuery","e","_e$toJSON","_e$toJSON$map","toJSON","map","error","message","join","console","useAllTeams","_s","teams","setTeams","setError","fetchData","_data$teamList","teamList","items","usePersonByName","fullName","_s2","person","setPerson","errors","setErrors","_data$personList","_data$personList$item","name","personList","length","useAllTeamMatches","_s3","matches","setMatches","_data$teamList2"],"sources":["/Users/macintosh/AEM/aem-custom-packages/aem-guides-wknd-graphql/basic-tutorial/src/api/usePersistedQueries.js"],"sourcesContent":["/*\nCopyright 2022 Adobe\nAll Rights Reserved.\n\nNOTICE: Adobe permits you to use, modify, and distribute this file in\naccordance with the terms of the Adobe license agreement accompanying\nit.\n*/\n\nimport aemHeadlessClient from \"./aemHeadlessClient\";\nimport { useEffect, useState } from \"react\";\n\n/**\n * This file contains the React useEffect custom hooks that:\n * 1. Are called by the React components\n * 2. To get data from AEM GraphQL persisted queries\n *\n * Each custom hook maps to a persisted query and is responsible for:\n * 1. Calling the AEM persisted query\n * 2. Collecting and transforming the returned data into the format expected by the React view components\n * 3. Setting and returning any error state\n */\n\n/**\n *  \n */\n\n/**\n * Private, shared function that invokes the AEM Headless client.\n * \n * @param {String} persistedQueryName the fully qualified name of the persisted query\n * @param {*} queryParameters an optional JavaScript object containing query parameters\n * @returns the GraphQL data or an error message \n */\nasync function fetchPersistedQuery(persistedQueryName, queryParameters) {\n  //*********************************\n  // TODO :: Implement this by following the steps from AEM Headless Tutorial ==> Implement to run AEM GraphQL persisted queries\n  // https://experienceleague.adobe.com/docs/experience-manager-learn/getting-started-with-aem-headless/graphql/multi-step/graphql-and-react-app.html#implement-to-run-aem-graphql-persisted-queries\n  //*********************************\n  let data;\n  let err;\n\n  try {\n    // AEM GraphQL queries are asynchronous, either await their return or use Promise-based syntax\n    const response = await aemHeadlessClient.runPersistedQuery(\n      persistedQueryName,\n      queryParameters\n    );\n    // The GraphQL data is stored on the response's data field\n    data = response?.data;\n  } catch (e) {\n    // An error occurred, return the error messages\n    err = e\n      .toJSON()\n      ?.map((error) => error.message)\n      ?.join(\", \");\n    console.error(e.toJSON());\n  }\n\n  // Return the GraphQL and any errors\n  return { data, err };\n}\n\n/**\n * Custom hook that calls the 'my-project/all-teams' persisted query.\n *\n * @returns an array of Team JSON objects, and array of errors\n */\nexport function useAllTeams() {\n\n  //*********************************\n  // TODO :: Implement this by following the steps from AEM Headless Tutorial ==> Implement Teams functionality\n  // https://experienceleague.adobe.com/docs/experience-manager-learn/getting-started-with-aem-headless/graphql/multi-step/graphql-and-react-app.html#implement-teams-functionality\n  //*********************************\n  const [teams, setTeams] = useState(null);\n  const [error, setError] = useState(null);\n\n  // Use React useEffect to manage state changes\n  useEffect(() => {\n    async function fetchData() {\n      // Call the AEM GraphQL persisted query named \"my-project/all-teams\"\n      const { data, err } = await fetchPersistedQuery(\n        \"my-project/all-teams\"\n      );\n      // Sets the teams variable to the list of team JSON objects\n      setTeams(data?.teamList?.items);\n      // Set any errors\n      setError(err);\n    }\n    // Call the internal fetchData() as per React best practices\n    fetchData();\n  }, []);\n\n  // Returns the teams and errors\n  return { teams, error };\n}\n\n/**\n * Calls the 'my-project/person-by-name' and provided the {fullName} as the persisted query's `name` parameter.\n *\n * @param {String!} fullName the full\n * @returns a JSON object representing the person\n */\n/**\n * Calls the 'my-project/person-by-name' and provided the {fullName} as the persisted query's `name` parameter.\n *\n * @param {String!} fullName the full\n * @returns a JSON object representing the person\n */\n export function usePersonByName(fullName) {\n  const [person, setPerson] = useState(null);\n  const [errors, setErrors] = useState(null);\n\n  useEffect(() => {\n    async function fetchData() {\n      // The key is the variable name as defined in the persisted query, and may not match the model's field name\n      const queryParameters = { name: fullName };\n\n      // Invoke the persisted query, and pass in the queryParameters object as the 2nd parameter\n      const { data, err } = await fetchPersistedQuery(\n        \"my-project/person-by-name\",\n        queryParameters\n      );\n\n      if (err) {\n        // Capture errors from the HTTP request\n        setErrors(err);\n      } else if (data?.personList?.items?.length === 1) {\n        // Set the person data after data validation\n        setPerson(data.personList.items[0]);\n      } else {\n        // Set an error if no person could be found\n        setErrors(`Cannot find person with name: ${fullName}`);\n      }\n    }\n    fetchData();\n  }, [fullName]);\n\n  return { person, errors };\n}\n\nexport function useAllTeamMatches() {\n\n  //*********************************\n  // TODO :: Implement this by following the steps from AEM Headless Tutorial ==> Implement Teams functionality\n  // https://experienceleague.adobe.com/docs/experience-manager-learn/getting-started-with-aem-headless/graphql/multi-step/graphql-and-react-app.html#implement-teams-functionality\n  //*********************************\n  const [matches, setMatches] = useState(null);\n  const [error, setError] = useState(null);\n\n  // Use React useEffect to manage state changes\n  useEffect(() => {\n    async function fetchData() {\n      // Call the AEM GraphQL persisted query named \"my-project/all-teams\"\n      const { data, err } = await fetchPersistedQuery(\n        \"my-project/all-venue\"\n      );\n      // Sets the teams variable to the list of team JSON objects\n      setTeams(data?.teamList?.items);\n      // Set any errors\n      setError(err);\n    }\n    // Call the internal fetchData() as per React best practices\n    fetchData();\n  }, []);\n\n  // Returns the teams and errors\n  return { teams, error };\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}