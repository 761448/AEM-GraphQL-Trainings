{"ast":null,"code":"var _jsxFileName = \"/Users/macintosh/AEM/aem-custom-packages/AEM-GraphQL-Trainings/basic-tutorial/src/components/Person.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { usePersonByName } from \"../api/usePersistedQueries\";\nimport { mapJsonRichText } from \"../utils/renderRichText\";\nimport Error from \"./Error\";\nimport Loading from \"./Loading\";\nimport \"./Person.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Person() {\n  _s();\n  // Read the person's `fullName` which is the parameter used to query for the person's details\n  const {\n    fullName\n  } = useParams();\n\n  // Query AEM for the Person's details, using the `fullName` as the filtering parameter\n  const {\n    person,\n    error\n  } = usePersonByName(fullName);\n\n  // Handle error and loading conditions\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Error, {\n      errorMessage: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 12\n    }, this);\n  } else if (!person) {\n    return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Render the person data\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"person\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"person__image\",\n      src: process.env.REACT_APP_HOST_URI + person.profilePicture._path,\n      alt: person.fullName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"person__occupations\",\n      children: person.occupation.map((occupation, index) => {\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"person__occupation\",\n          children: occupation\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"person__content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"person__full-name\",\n        children: person.fullName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"person__biography\",\n        children: mapJsonRichText(person.biographyText.json)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(Person, \"q1XQ3VbGpMWHS8MEr+Sx2DO3QKM=\", false, function () {\n  return [useParams, usePersonByName];\n});\n_c = Person;\nexport default Person;\nvar _c;\n$RefreshReg$(_c, \"Person\");","map":{"version":3,"names":["React","useParams","usePersonByName","mapJsonRichText","Error","Loading","jsxDEV","_jsxDEV","Person","_s","fullName","person","error","errorMessage","fileName","_jsxFileName","lineNumber","columnNumber","className","children","src","process","env","REACT_APP_HOST_URI","profilePicture","_path","alt","occupation","map","index","biographyText","json","_c","$RefreshReg$"],"sources":["/Users/macintosh/AEM/aem-custom-packages/AEM-GraphQL-Trainings/basic-tutorial/src/components/Person.js"],"sourcesContent":["import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { usePersonByName } from \"../api/usePersistedQueries\";\nimport { mapJsonRichText } from \"../utils/renderRichText\";\nimport Error from \"./Error\";\nimport Loading from \"./Loading\";\nimport \"./Person.scss\";\n\nfunction Person() {\n  // Read the person's `fullName` which is the parameter used to query for the person's details\n  const { fullName } = useParams();\n\n  // Query AEM for the Person's details, using the `fullName` as the filtering parameter\n  const { person, error } = usePersonByName(fullName);\n\n  // Handle error and loading conditions\n  if (error) {\n    return <Error errorMessage={error} />;\n  } else if (!person) {\n    return <Loading />;\n  }\n\n  // Render the person data\n  return (\n    <div className=\"person\">\n      <img\n        className=\"person__image\"\n        src={process.env.REACT_APP_HOST_URI+person.profilePicture._path}\n        alt={person.fullName}\n      />\n      <div className=\"person__occupations\">\n        {person.occupation.map((occupation, index) => {\n          return (\n            <span key={index} className=\"person__occupation\">\n              {occupation}\n            </span>\n          );\n        })}\n      </div>\n      <div className=\"person__content\">\n        <h1 className=\"person__full-name\">{person.fullName}</h1>\n        <div className=\"person__biography\">\n          {/* Use this utility to transform multi-line text JSON into HTML */}\n          {mapJsonRichText(person.biographyText.json)}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Person;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,eAAe,QAAQ,4BAA4B;AAC5D,SAASC,eAAe,QAAQ,yBAAyB;AACzD,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAChB;EACA,MAAM;IAAEC;EAAS,CAAC,GAAGT,SAAS,EAAE;;EAEhC;EACA,MAAM;IAAEU,MAAM;IAAEC;EAAM,CAAC,GAAGV,eAAe,CAACQ,QAAQ,CAAC;;EAEnD;EACA,IAAIE,KAAK,EAAE;IACT,oBAAOL,OAAA,CAACH,KAAK;MAACS,YAAY,EAAED;IAAM;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EACvC,CAAC,MAAM,IAAI,CAACN,MAAM,EAAE;IAClB,oBAAOJ,OAAA,CAACF,OAAO;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EACpB;;EAEA;EACA,oBACEV,OAAA;IAAKW,SAAS,EAAC,QAAQ;IAAAC,QAAA,gBACrBZ,OAAA;MACEW,SAAS,EAAC,eAAe;MACzBE,GAAG,EAAEC,OAAO,CAACC,GAAG,CAACC,kBAAkB,GAACZ,MAAM,CAACa,cAAc,CAACC,KAAM;MAChEC,GAAG,EAAEf,MAAM,CAACD;IAAS;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACrB,eACFV,OAAA;MAAKW,SAAS,EAAC,qBAAqB;MAAAC,QAAA,EACjCR,MAAM,CAACgB,UAAU,CAACC,GAAG,CAAC,CAACD,UAAU,EAAEE,KAAK,KAAK;QAC5C,oBACEtB,OAAA;UAAkBW,SAAS,EAAC,oBAAoB;UAAAC,QAAA,EAC7CQ;QAAU,GADFE,KAAK;UAAAf,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAET;MAEX,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACE,eACNV,OAAA;MAAKW,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC9BZ,OAAA;QAAIW,SAAS,EAAC,mBAAmB;QAAAC,QAAA,EAAER,MAAM,CAACD;MAAQ;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM,eACxDV,OAAA;QAAKW,SAAS,EAAC,mBAAmB;QAAAC,QAAA,EAE/BhB,eAAe,CAACQ,MAAM,CAACmB,aAAa,CAACC,IAAI;MAAC;QAAAjB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACvC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEV;AAACR,EAAA,CAxCQD,MAAM;EAAA,QAEQP,SAAS,EAGJC,eAAe;AAAA;AAAA8B,EAAA,GALlCxB,MAAM;AA0Cf,eAAeA,MAAM;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}